[{"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\index.js":"1","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\App.js":"2","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\pages\\main.js":"4","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\pages\\admin.js":"5","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\components\\addProjectPopUp\\addProjectPopUp.js":"6","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\components\\alert\\alert.js":"7"},{"size":501,"mtime":1629284337838,"results":"8","hashOfConfig":"9"},{"size":487,"mtime":1629360730064,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2142,"mtime":1629364134898,"results":"12","hashOfConfig":"9"},{"size":3743,"mtime":1629379196935,"results":"13","hashOfConfig":"9"},{"size":3534,"mtime":1629365209737,"results":"14","hashOfConfig":"9"},{"size":4951,"mtime":1629364217393,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"5h9if7",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\index.js",[],["33","34"],"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\App.js",[],"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\pages\\main.js",["35","36","37"],"import './main.css';\r\nimport React, { useState , useEffect} from 'react'\r\nimport Alert from \"../components/alert/alert\"\r\n\r\nconst Main = () =>{\r\n    const[projects, setProjects] = useState()\r\n    const[updateList, setUpdateList] = useState(false)\r\n\r\n    function openProject(name){\r\n        \r\n        const body = {\r\n            project: name\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n        fetch(\"http://localhost:8000/execExternal\", options)\r\n        .then(response=>response.json())\r\n        .then(json =>{\r\n            console.log(json)\r\n        })\r\n    }\r\n\r\n    useEffect(async() =>{\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n        await fetch(\"http://localhost:8000/getProjectsNames\", options)\r\n        .then(response=>response.json())\r\n        .then(async json =>{\r\n            console.log(json)\r\n            let projectsComponent = []\r\n            for(let i = 0; i < json.length; i++){\r\n                projectsComponent.push(<div className=\"panel__content__container\">\r\n                    <div className=\"panel__content__button\">\r\n                        <button className=\"project__button\" onClick={() => openProject(json[i].name)}>{json[i].name}</button>    \r\n                    </div>\r\n                </div>)\r\n            }\r\n            await setProjects(projectsComponent)\r\n        }) \r\n    }, [updateList])\r\n    \r\n    return(\r\n        <div>\r\n        \r\n        <div className=\"panel__container\">\r\n            <div className=\"panel__heading__container\">\r\n                \r\n                    <h4 className=\"panel__heading__text\">PROJECTS LIST</h4>\r\n                \r\n            </div>\r\n            <div className=\"elements__container\">\r\n                <div className=\"menu\">\r\n                    {projects}                  \r\n                </div>\r\n            </div>   \r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Main;","C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\pages\\admin.js",["38"],"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\components\\addProjectPopUp\\addProjectPopUp.js",[],"C:\\xampp\\htdocs\\3dtoolauncher-react\\src\\components\\alert\\alert.js",["39","40","41","42","43","44"],"import React, { Component } from 'react';\r\nimport SuccessIcon from \"../../assets/images/CheckCircle.png\"\r\nimport ErrorIcon from \"../../assets/images/WarningCircle.png\"\r\nimport WarningIcon from \"../../assets/images/Warning.png\"\r\nimport \"./alert.css\"\r\n\r\nexport default class Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type: props.type,\r\n            text: props.text,\r\n            alert: null,\r\n            subtext: props.subtext,\r\n            popUp: props.popUp,\r\n            change: props.change\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        let alertComponent = null\r\n        if(this.state.type === \"success\"){\r\n            if(this.state.change){\r\n                alertComponent = <div className=\"alert__success\">\r\n                                    \r\n                <img src={SuccessIcon} className=\"alert__icon\"></img>\r\n                <div className=\"text__alert__container\">\r\n                    <text className=\"alert__title\">Excellent!</text>\r\n                    <text className=\"alert__text\" style={{marginLeft:\"0px\"}}>{this.props.text}</text>\r\n                </div>\r\n            \r\n            </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__success\">\r\n                                    \r\n                                    <img src={SuccessIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Excellent!</text>\r\n                                        <text className=\"alert__text\" style={{marginLeft:this.props.margin}}>{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})\r\n        }else if(this.state.type === \"error\"){\r\n            if(this.state.change){\r\n                alertComponent = <div className=\"alert__error\">\r\n                                    \r\n                <img src={ErrorIcon} className=\"alert__icon\"></img>\r\n                <div className=\"text__alert__container\">\r\n                    <text className=\"alert__title\">Oops!</text>\r\n                    <text className=\"alert__error__text\" style={{marginLeft:\"0px\"}}>Something has failed:</text>\r\n                    <text className=\"alert__subtext\" style={{marginLeft:this.props.margin}}>{this.props.subtext}</text>\r\n                </div>\r\n            \r\n            </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__error\">\r\n                                    \r\n                                    <img src={ErrorIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Oops!</text>\r\n                                        <text className=\"alert__error__text\">Something has failed:</text>\r\n                                        <text className=\"alert__subtext\" style={{marginLeft:this.props.margin}}>{this.props.subtext}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})\r\n        }else{\r\n            if(this.state.popUp){\r\n                alertComponent = <div className=\"alert__warning\" style={{marginTop:\"-200px\"}}>\r\n                                    \r\n                                    <img src={WarningIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Warning</text>\r\n                                        <text className=\"alert__text\" >{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }else{\r\n                alertComponent = <div className=\"alert__warning\">\r\n                                    \r\n                                    <img src={WarningIcon} className=\"alert__icon\"></img>\r\n                                    <div className=\"text__alert__container\">\r\n                                        <text className=\"alert__title\">Warning</text>\r\n                                        <text className=\"alert__text\" style={{marginLeft:this.props.margin}}>{this.props.text}</text>\r\n                                    </div>\r\n                                \r\n                                </div>\r\n            }\r\n            this.setState({alert: alertComponent})  \r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"alert__container__fade\">\r\n                {this.state.alert}\r\n            </div>           \r\n        );\r\n    }\r\n}",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":13},{"ruleId":"49","severity":1,"message":"53","line":7,"column":23,"nodeType":"51","messageId":"52","endLine":7,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":28,"column":15,"nodeType":"56","endLine":49,"endColumn":6},{"ruleId":"54","severity":1,"message":"55","line":57,"column":15,"nodeType":"56","endLine":78,"endColumn":6},{"ruleId":"57","severity":1,"message":"58","line":27,"column":17,"nodeType":"59","endLine":27,"endColumn":64},{"ruleId":"57","severity":1,"message":"58","line":37,"column":37,"nodeType":"59","endLine":37,"endColumn":84},{"ruleId":"57","severity":1,"message":"58","line":50,"column":17,"nodeType":"59","endLine":50,"endColumn":62},{"ruleId":"57","severity":1,"message":"58","line":61,"column":37,"nodeType":"59","endLine":61,"endColumn":82},{"ruleId":"57","severity":1,"message":"58","line":75,"column":37,"nodeType":"59","endLine":75,"endColumn":84},{"ruleId":"57","severity":1,"message":"58","line":85,"column":37,"nodeType":"59","endLine":85,"endColumn":84},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'setUpdateList' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]